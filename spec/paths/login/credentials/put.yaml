tags:
  - Login

security: []
deprecated: false
summary: 'Register a new account.'
description: 'Pay the invoice generated through a `/login/credentials` **GET** request and then use `paymentHash` to certify validity and finally create the account.'
operationId: Login_registerCredentials

requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        required:
          - 'paymentHash'
          - 'login'
          - 'password'
        properties:
          'paymentHash':
            type: string
            minLength: 64
            maxLength: 64
            example: 'b45dd2e30309aa708a73f0cfa0e38db5bbbbd16055087a692e0711365e7e08f5'
          'login':
            type: string
            pattern: '^\S{6,32}$'
            minLength: 6
            maxLength: 32
            example: 'Test-login'
          'password':
            type: string
            format: password
            pattern: '^(?=\S)(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).\S{7,63}'
            minLength: 8
            maxLength: 64
            example: 'Test-Password01'
        additionalProperties: false

responses:
  200:
    description: 'User successfuly created and logged.'
    content:
      application/json:
        schema:
          $ref: '../../../schemas/userDetails.yaml'

  400:
    $ref: '../../../responses.yaml#/badParameters'
